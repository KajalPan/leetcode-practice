# MY SOLUTION: Time Limit Exceeded
# Time: O(n^2) cause all elements are compared w each other. Space: O(1). 
# Sorting array first will mean duplicate-detection is earlier (duplicates are adjacent).
# nums.sort() good but not enough. Time: O(nlogn) -> log for sorting Space: O(1).
class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
        rep = []
        for n in nums:
            if n in rep:
                return True
            rep.append(n) #append after checking, otherwise it will always be true
        return False
    
# SOLULTION: Use HashSet. Time: O(n) Space: O(n)   
class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
        hashset = set()
        for n in nums:
            if n in hashset:
                return True
            hashset.add(n) #continue w rest of nums
        return False